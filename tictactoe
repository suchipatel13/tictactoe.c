#include <stdio.h>
#include <stdbool.h>

//Parameters: These letters stand for the values of a single row of tic-tac-toe board cells, and each variable represents the contents of a single cell in the row.
//Returns: None
void showBoard(char* board) {
    printf("     |      |      \n");
    printf("  %c  |  %c  |  %c\n", board[0], board[1], board[2]);
    printf("     |      |      \n");
    printf("---------------------\n");
    printf("     |      |      \n");
    printf("  %c  |  %c  |  %c\n", board[3], board[4], board[5]);
    printf("     |      |      \n");
    printf("---------------------\n");
    printf("     |      |      \n");
    printf("  %c  |  %c  |  %c\n", board[6], board[7], board[8]);
    printf("     |      |      \n");
}

void getMove(char *board, char playerSymbols)
{
      int move;
      bool valid = false;
      while(!valid){
      printf("It is %c's turn. Please enter your move into an empty space between 1 and 9. \n", playerSymbols);
      scanf("%d", &move);
      if(move>=1 && move<=9 && board[move-1]==' '){
      board[move-1]=playerSymbols;
      valid = true;
      }
      else{
           printf("Invalid move, try again.\n");
}
}
}

int checkWin( char *board , char playerSymbols)
{
if(board[0]==playerSymbols&&board[1]==playerSymbols&&board[2]==playerSymbols){
return 1;
}
else if (board [0]== playerSymbols&&board[3]==playerSymbols&&board[6]==playerSymbols){
return 1;
}
else if (board [0]== playerSymbols&&board[4]==playerSymbols&&board[8]==playerSymbols){
return 1;
}
else if (board [1]== playerSymbols&&board[4]==playerSymbols&&board[7]==playerSymbols){
return 1;
}
else if (board [2]== playerSymbols&&board[5]==playerSymbols&&board[8]==playerSymbols){
return 1;
}
else if (board [2]== playerSymbols&&board[4]==playerSymbols&&board[6]==playerSymbols){
return 1;
}
else if (board [3]== playerSymbols&&board[4]==playerSymbols&&board[5]==playerSymbols){
return 1;
}
else if (board [6]== playerSymbols&&board[7]==playerSymbols&&board[8]==playerSymbols){
return 1;
}
else{
return 0;
}
}
//Returns: If the game is over, it returns 0; otherwise, it returns non-zero.  If a player wins, or if there are no more moves left, the game is done.

int checkBoard(char *board, int *winner)
{
    if(checkWin(board,'X'))
    {
        *winner = 1;
        return 0;
    }
    if(checkWin(board, 'O'))
    {
        *winner = 2;
        return 0;
    }
    int spaceCount = 0;
    for(int i =0; i<9; i++)
    {
        if(board[i]== ' ')
        {
                spaceCount++;
            }
        }
        return spaceCount;
}

    
int main(int argc, char **argv)
{
    char board[9]= {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '};
    char symbols[3] = {' ','X','O'};
    int player = 2;
    int winner = 0;
    int running = 1;
    while(running)
    {
        player = (player++) % 2 + 1;
        showBoard(board);
        getMove(board,symbols[player]);
        running = checkBoard(board, &winner);
    }
    showBoard(board);
    if(winner!=0){
        printf("Congratulations player %d!!! You win. \n", player);
    }else{
        printf("It's a tie!!! \n");
    }
    return 0;
}
   



